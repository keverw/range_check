{"version":3,"file":"range-check.umd.js","sources":["../node_modules/ipaddr.js/lib/ipaddr.js","../node_modules/ip6/ip6.js","../src/range-check.ts"],"sourcesContent":["(function() {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first, second, partSize, cidrBits) {\n    var part, shift;\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\n    var k, len, rangeName, rangeSubnets, subnet;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (k = 0, len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address, subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var k, len, octet;\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n      for (k = 0, len = octets.length; k < len; k++) {\n        octet = octets[k];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toNormalizedString = function() {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, octet, stop, zeros, zerotable;\n      zerotable = {\n        0: 8,\n        128: 7,\n        192: 6,\n        224: 5,\n        240: 4,\n        248: 3,\n        252: 2,\n        254: 1,\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 8) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 32 - cidr;\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match, parseIntAuto, part, shift, value;\n    parseIntAuto = function(string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var k, len, ref, results;\n        ref = match.slice(1, 6);\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n        return results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error(\"ipaddr: address outside defined range\");\n      }\n      return ((function() {\n        var k, results;\n        results = [];\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push((value >> shift) & 0xff);\n        }\n        return results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts, zoneId) {\n      var i, k, l, len, part, ref;\n      if (parts.length === 16) {\n        this.parts = [];\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");\n      }\n      ref = this.parts;\n      for (l = 0, len = ref.length; l < len; l++) {\n        part = ref[l];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");\n        }\n      }\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n    };\n\n    IPv6.prototype.toRFC5952String = function() {\n      var bestMatchIndex, bestMatchLength, match, regex, string;\n      regex = /((^|:)(0(:|$)){2,})/g;\n      string = this.toNormalizedString();\n      bestMatchIndex = 0;\n      bestMatchLength = -1;\n      while ((match = regex.exec(string))) {\n        if (match[0].length > bestMatchLength) {\n          bestMatchIndex = match.index;\n          bestMatchLength = match[0].length;\n        }\n      }\n      if (bestMatchLength < 0) {\n        return string;\n      }\n      return string.substring(0, bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes, k, len, part, ref;\n      bytes = [];\n      ref = this.parts;\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.toFixedLengthString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16).padStart(4, '0'));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high, low, ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n      ref = this.parts.slice(-2), high = ref[0], low = ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, part, stop, zeros, zerotable;\n      zerotable = {\n        0: 16,\n        32768: 15,\n        49152: 14,\n        57344: 13,\n        61440: 12,\n        63488: 11,\n        64512: 10,\n        65024: 9,\n        65280: 8,\n        65408: 7,\n        65472: 6,\n        65504: 5,\n        65520: 4,\n        65528: 3,\n        65532: 2,\n        65534: 1,\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n        if (part in zerotable) {\n          zeros = zerotable[part];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 16) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 128 - cidr;\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n\n  zoneIndex = \"%[0-9a-z]{1,}\";\n\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex, 'i'),\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?(\" + zoneIndex + \")?$\", 'i'),\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part) + (\"(\" + zoneIndex + \")?$\"), 'i')\n  };\n\n  expandIPv6 = function(string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount, zoneId;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/, '');\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string.substr(0, 2) === '::') {\n      colonCount--;\n    }\n    if (string.substr(-2, 2) === '::') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::', replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n    parts = (function() {\n      var k, len, ref, results;\n      ref = string.split(\":\");\n      results = [];\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part, 16));\n      }\n      return results;\n    })();\n    return {\n      parts: parts,\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var addr, k, len, match, octet, octets, zoneId;\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n      if (addr.parts) {\n        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];\n        for (k = 0, len = octets.length; k < len; k++) {\n          octet = octets[k];\n          if (!((0 <= octet && octet <= 255))) {\n            return null;\n          }\n        }\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts,\n          zoneId: addr.zoneId\n        };\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function(string) {\n    var addr, e;\n    if (typeof string === \"string\" && string.indexOf(\":\") === -1) {\n      return false;\n    }\n    try {\n      addr = this.parser(string);\n      new this(addr.parts, addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function(string) {\n    var addr;\n    addr = this.parser(string);\n    if (addr.parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(addr.parts, addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\n    var filledOctetCount, j, octets;\n    prefix = parseInt(prefix);\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n    octets = [0, 0, 0, 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n    }\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function(bytes) {\n    var length;\n    length = bytes.length;\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n","/**\n * Created by elgs on 3/5/16.\n */\nconst normalize = function (a) {\n   if (!_validate(a)) {\n      throw new Error('Invalid address: ' + a);\n   }\n   a = a.toLowerCase()\n\n   const nh = a.split(/\\:\\:/g);\n   if (nh.length > 2) {\n      throw new Error('Invalid address: ' + a);\n   }\n\n   let sections = [];\n   if (nh.length == 1) {\n      // full mode\n      sections = a.split(/\\:/g);\n      if (sections.length !== 8) {\n         throw new Error('Invalid address: ' + a);\n      }\n   } else if (nh.length == 2) {\n      // compact mode\n      const n = nh[0];\n      const h = nh[1];\n      const ns = n.split(/\\:/g);\n      const hs = h.split(/\\:/g);\n      for (let i in ns) {\n         sections[i] = ns[i];\n      }\n      for (let i = hs.length; i > 0; --i) {\n         sections[7 - (hs.length - i)] = hs[i - 1];\n      }\n   }\n   for (let i = 0; i < 8; ++i) {\n      if (sections[i] === undefined) {\n         sections[i] = '0000';\n      }\n      sections[i] = _leftPad(sections[i], '0', 4);\n   }\n   return sections.join(':');\n};\n\nconst abbreviate = function (a) {\n   if (!_validate(a)) {\n      throw new Error('Invalid address: ' + a);\n   }\n   a = normalize(a);\n   a = a.replace(/0000/g, 'g');\n   a = a.replace(/\\:000/g, ':');\n   a = a.replace(/\\:00/g, ':');\n   a = a.replace(/\\:0/g, ':');\n   a = a.replace(/g/g, '0');\n   const sections = a.split(/\\:/g);\n   let zPreviousFlag = false;\n   let zeroStartIndex = -1;\n   let zeroLength = 0;\n   let zStartIndex = -1;\n   let zLength = 0;\n   for (let i = 0; i < 8; ++i) {\n      const section = sections[i];\n      let zFlag = (section === '0');\n      if (zFlag && !zPreviousFlag) {\n         zStartIndex = i;\n      }\n      if (!zFlag && zPreviousFlag) {\n         zLength = i - zStartIndex;\n      }\n      if (zLength > 1 && zLength > zeroLength) {\n         zeroStartIndex = zStartIndex;\n         zeroLength = zLength;\n      }\n      zPreviousFlag = (section === '0');\n   }\n   if (zPreviousFlag) {\n      zLength = 8 - zStartIndex;\n   }\n   if (zLength > 1 && zLength > zeroLength) {\n      zeroStartIndex = zStartIndex;\n      zeroLength = zLength;\n   }\n   //console.log(zeroStartIndex, zeroLength);\n   //console.log(sections);\n   if (zeroStartIndex >= 0 && zeroLength > 1) {\n      sections.splice(zeroStartIndex, zeroLength, 'g');\n   }\n   //console.log(sections);\n   a = sections.join(':');\n   //console.log(a);\n   a = a.replace(/\\:g\\:/g, '::');\n   a = a.replace(/\\:g/g, '::');\n   a = a.replace(/g\\:/g, '::');\n   a = a.replace(/g/g, '::');\n   //console.log(a);\n   return a;\n};\n\n// Basic validation\nconst _validate = function (a) {\n   return /^[a-f0-9\\\\:]+$/ig.test(a);\n};\n\nconst _leftPad = function (d, p, n) {\n   const padding = p.repeat(n);\n   if (d.length < padding.length) {\n      d = padding.substring(0, padding.length - d.length) + d;\n   }\n   return d;\n};\n\nconst _hex2bin = function (hex) {\n   return parseInt(hex, 16).toString(2)\n};\nconst _bin2hex = function (bin) {\n   return parseInt(bin, 2).toString(16)\n};\n\nconst _addr2bin = function (addr) {\n   const nAddr = normalize(addr);\n   const sections = nAddr.split(\":\");\n   let binAddr = '';\n   for (const section of sections) {\n      binAddr += _leftPad(_hex2bin(section), '0', 16);\n   }\n   return binAddr;\n};\n\nconst _bin2addr = function (bin) {\n   const addr = [];\n   for (let i = 0; i < 8; ++i) {\n      const binPart = bin.substr(i * 16, 16);\n      const hexSection = _leftPad(_bin2hex(binPart), '0', 4);\n      addr.push(hexSection);\n   }\n   return addr.join(':');\n};\n\nconst divideSubnet = function (addr, mask0, mask1, limit, abbr) {\n   if (!_validate(addr)) {\n      throw new Error('Invalid address: ' + addr);\n   }\n   mask0 *= 1;\n   mask1 *= 1;\n   limit *= 1;\n   mask1 = mask1 || 128;\n   if (mask0 < 1 || mask1 < 1 || mask0 > 128 || mask1 > 128 || mask0 > mask1) {\n      throw new Error('Invalid masks.');\n   }\n   const ret = [];\n   const binAddr = _addr2bin(addr);\n   const binNetPart = binAddr.substr(0, mask0);\n   const binHostPart = '0'.repeat(128 - mask1);\n   const numSubnets = Math.pow(2, mask1 - mask0);\n   for (let i = 0; i < numSubnets; ++i) {\n      if (!!limit && i >= limit) {\n         break;\n      }\n      const binSubnet = _leftPad(i.toString(2), '0', mask1 - mask0);\n      const binSubAddr = binNetPart + binSubnet + binHostPart;\n      const hexAddr = _bin2addr(binSubAddr);\n      if (!!abbr) {\n         ret.push(abbreviate(hexAddr));\n      } else {\n         ret.push(hexAddr);\n      }\n\n   }\n   // console.log(numSubnets);\n   // console.log(binNetPart, binSubnetPart, binHostPart);\n   // console.log(binNetPart.length, binSubnetPart.length, binHostPart.length);\n   // console.log(ret.length);\n   return ret;\n};\n\nconst range = function (addr, mask0, mask1, abbr) {\n   if (!_validate(addr)) {\n      throw new Error('Invalid address: ' + addr);\n   }\n   mask0 *= 1;\n   mask1 *= 1;\n   mask1 = mask1 || 128;\n   if (mask0 < 1 || mask1 < 1 || mask0 > 128 || mask1 > 128 || mask0 > mask1) {\n      throw new Error('Invalid masks.');\n   }\n   const binAddr = _addr2bin(addr);\n   const binNetPart = binAddr.substr(0, mask0);\n   const binHostPart = '0'.repeat(128 - mask1);\n   const binStartAddr = binNetPart + '0'.repeat(mask1 - mask0) + binHostPart;\n   const binEndAddr = binNetPart + '1'.repeat(mask1 - mask0) + binHostPart;\n   if (!!abbr) {\n      return {\n         start: abbreviate(_bin2addr(binStartAddr)),\n         end: abbreviate(_bin2addr(binEndAddr)),\n         size: Math.pow(2, mask1 - mask0)\n      };\n   } else {\n      return {\n         start: _bin2addr(binStartAddr),\n         end: _bin2addr(binEndAddr),\n         size: Math.pow(2, mask1 - mask0)\n      };\n   }\n};\n\nconst randomSubnet = function (addr, mask0, mask1, limit, abbr) {\n   if (!_validate(addr)) {\n      throw new Error('Invalid address: ' + addr);\n   }\n   mask0 *= 1;\n   mask1 *= 1;\n   limit *= 1;\n   mask1 = mask1 || 128;\n   limit = limit || 1;\n   if (mask0 < 1 || mask1 < 1 || mask0 > 128 || mask1 > 128 || mask0 > mask1) {\n      throw new Error('Invalid masks.');\n   }\n   const ret = [];\n   const binAddr = _addr2bin(addr);\n   const binNetPart = binAddr.substr(0, mask0);\n   const binHostPart = '0'.repeat(128 - mask1);\n   const numSubnets = Math.pow(2, mask1 - mask0);\n   for (let i = 0; i < numSubnets && i < limit; ++i) {\n      // generate an binary string with length of mask1 - mask0\n      let binSubnet = '';\n      for (let j = 0; j < mask1 - mask0; ++j) {\n         binSubnet += Math.floor(Math.random() * 2);\n      }\n      const binSubAddr = binNetPart + binSubnet + binHostPart;\n      const hexAddr = _bin2addr(binSubAddr);\n      if (!!abbr) {\n         ret.push(abbreviate(hexAddr));\n      } else {\n         ret.push(hexAddr);\n      }\n   }\n   // console.log(numSubnets);\n   // console.log(binNetPart, binSubnetPart, binHostPart);\n   // console.log(binNetPart.length, binSubnetPart.length, binHostPart.length);\n   // console.log(ret.length);\n   return ret;\n};\n\nconst ptr = function (addr, mask) {\n   if (!_validate(addr)) {\n      throw new Error('Invalid address: ' + addr);\n   }\n   mask *= 1;\n   if (mask < 1 || mask > 128 || Math.floor(mask / 4) != mask / 4) {\n      throw new Error('Invalid masks.');\n   }\n   const fullAddr = normalize(addr);\n   const reverse = fullAddr.replace(/:/g, '').split('').reverse();\n   return reverse.slice(0, (128 - mask) / 4).join('.');\n};\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n   exports.normalize = normalize;\n   exports.abbreviate = abbreviate;\n   exports.divideSubnet = divideSubnet;\n   exports.range = range;\n   exports.randomSubnet = randomSubnet;\n   exports.ptr = ptr;\n} else {\n   window.normalize = normalize;\n   window.abbreviate = abbreviate;\n   window.divideSubnet = divideSubnet;\n   window.range = range;\n   window.randomSubnet = randomSubnet;\n   window.ptr = ptr;\n}\n","import ipaddr from 'ipaddr.js';\n// @ts-ignore: Can't find a @types/ip6 package\nimport ip6 from 'ip6';\n\nexport function isIP(addr: string) {\n  return ipaddr.isValid(addr);\n}\n\nexport function version(addr: string): number {\n  try {\n    const parse_addr = ipaddr.parse(addr);\n    const kind = parse_addr.kind();\n\n    if (kind === 'ipv4') {\n      return 4; //IPv4\n    } else if (kind === 'ipv6') {\n      return 6; //IPv6\n    } else {\n      /* istanbul ignore next */\n      return 0; //not 4 or 6\n    }\n  } catch (err) {\n    return 0; //not 4 or 6\n  }\n}\n\nexport function isV4(addr: string) {\n  return version(addr) === 4;\n}\n\nexport function isV6(addr: string) {\n  return version(addr) === 6;\n}\n\nexport function isRange(range: string) {\n  try {\n    const cidr = ipaddr.parseCIDR(range);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nexport function inRange(addr: string, range: string | string[]) {\n  if (typeof range === 'string') {\n    if (range.indexOf('/') !== -1) {\n      try {\n        const range_data = range.split('/');\n\n        const parse_addr = ipaddr.parse(addr);\n        const parse_range = ipaddr.parse(range_data[0]);\n\n        //@ts-ignore:  It works.\n        return parse_addr.match(parse_range, range_data[1]);\n      } catch (err) {\n        return false;\n      }\n    } else {\n      addr = isV6(addr) ? ip6.normalize(addr) : addr; //v6 normalize addr\n      range = isV6(range) ? ip6.normalize(range) : range; //v6 normalize range\n\n      return isIP(range as string) && addr === range;\n    }\n  } else if (range && typeof range === 'object') {\n    //list\n    for (const check_range in range) {\n      if (inRange(addr, range[check_range]) === true) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return false;\n  }\n}\n\nexport function storeIP(addr: string) {\n  try {\n    var parse_addr = ipaddr.parse(addr);\n    var kind = parse_addr.kind();\n\n    if (kind === 'ipv4') {\n      //is a plain v4 address\n      return addr;\n    } else if (kind === 'ipv6') {\n      //@ts-ignore:  it exists!\n      if (parse_addr.isIPv4MappedAddress()) {\n        //convert v4 mapped to v6 addresses to a v4 in it's original format\n        //@ts-ignore:  it exists!\n        return parse_addr.toIPv4Address().toString();\n      } //is a v6, abbreviate it\n      else {\n        return ip6.abbreviate(addr);\n      }\n    } else {\n      return null; //invalid IP address\n    }\n  } catch (err) {\n    return null; //invalid IP address\n  }\n}\n\n// searchIP is a aliases of storeIP\nexport { storeIP as searchIP };\n\nexport function displayIP(addr: string) {\n  try {\n    var parse_addr = ipaddr.parse(addr);\n    var kind = parse_addr.kind();\n\n    if (kind === 'ipv4') {\n      //is a plain v4 address\n      return addr;\n    } else if (kind === 'ipv6') {\n      //@ts-ignore:  it exists!\n      if (parse_addr.isIPv4MappedAddress()) {\n        //convert v4 mapped to v6 addresses to a v4 in it's original format\n        //@ts-ignore:  it exists!\n        return parse_addr.toIPv4Address().toString();\n      } //is a v6, normalize it\n      else {\n        return ip6.normalize(addr);\n      }\n    } else {\n      return ''; //invalid IP address\n    }\n  } catch (err) {\n    return ''; //invalid IP address\n  }\n}\n"],"names":["this"],"mappings":"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"}